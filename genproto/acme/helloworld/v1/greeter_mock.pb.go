// Code generated by protoc-gen-go-mock. DO NOT EDIT.
// versions:
// - protoc-gen-go-mock v1.0.0
// - protoc             v3.20.3
// source: acme/helloworld/v1/greeter.proto

package helloworld

import (
	context "context"
	fmt "fmt"
	grpc "google.golang.org/grpc"
)

var _ GreeterClient = &GreeterMockClient{}

type GreeterMockClient struct {
	GreeterHelloHandler
}

type GreeterHelloHandler func(ctx context.Context, in *GreeterHelloRequest, opts ...grpc.CallOption) (*GreeterHelloResponse, error)

func NewGreeterMockClient() *GreeterMockClient {
	return &GreeterMockClient{}
}

func (c *GreeterMockClient) Hello(ctx context.Context, in *GreeterHelloRequest, opts ...grpc.CallOption) (*GreeterHelloResponse, error) {
	handler := c.GreeterHelloHandler
	if handler == nil {
		return nil, fmt.Errorf("no handler registered for Hello")
	}

	return handler(ctx, in, opts...)
}
